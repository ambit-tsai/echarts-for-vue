/**
 * echarts-for-vue
 * @version 0.0.1
 * @author Ambit-Tsai <ambit_tsai@qq.com>
 * @license MIT
 * @see {@link https://github.com/ambit-tsai/echarts-for-vue#readme}
 */
import t from"echarts";import{addListener as e,removeListener as i}from"resize-detector";function n(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}function s(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,n)}return i}function r(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?s(Object(i),!0).forEach((function(e){n(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):s(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}var o={name:"ECharts",render:function(t){return t("div",{attrs:this.$attrs,on:this.$listeners,style:{height:"100%",overflow:"hidden"}})},props:{initTheme:[Object,String],initOpts:Object,loading:{type:Boolean,default:!1},loadingType:{type:String,default:"default"},loadingOpts:Object,option:Object,setOptionOpts:Object,events:Array,autoResize:{type:Boolean,default:!0}},data:function(){var e=this;return{resizeChart:t.throttle((function(){var t=e.$el,i=t.clientWidth,n=t.clientHeight;e.$inst.resize({width:i,height:n})}))}},watch:{loading:function(t){t?this.$inst.showLoading(this.loadingType,this.loadingOpts):this.$inst.hideLoading()},option:function(t){this.setOption(t)}},mounted:function(){var e=t.init(this.$el,this.theme,this.initOpts);this.$inst=e,this.loading&&e.showLoading(this.loadingType,this.loadingOpts),this.option&&this.setOption(this.option),this.events&&this.events.forEach((function(t){return e.on.apply(e,t)})),this.autoResize&&this.addResizeListener()},methods:{setOption:function(t,e){this.$inst.setOption(t,r(r({},this.setOptionOpts),e))},addResizeListener:function(){e(this.$el,this.resizeChart)},removeResizeListener:function(){i(this.$el,this.resizeChart)}},activated:function(){this.addResizeListener(),this.resizeChart()},deactivated:function(){this.removeResizeListener()},beforeDestroy:function(){this.removeResizeListener(),this.$inst.dispose()}};export default o;
